on:
  workflow_call:
    inputs:
      node-versions:
        description: 'Node versions to use'
        required: false
        default: '[18,20]'
        type: string
      publish-node-version:
        description: 'Node version to use for publish'
        required: false
        default: '20'
        type: string
      pnpm-version:
        description: 'PNPM version to use'
        required: false
        default: '8'
        type: string
      github-email:
        description: 'GitHub email for pushing'
        type: string
        required: true
      github-name:
        description: 'GitHub name for pushing'
        type: string
        required: true
      site-branch:
        description: 'Branch used to publish site to GitHub pages'
        type: string
        required: false
        default: ''
      version-dir:
        description: 'Directory to change to before running version commands'
        type: string
        required: false
        default: '.'
      publish-dir:
        description: 'Directory to change to before running publish commands'
        type: string
        required: false
        default: '.'
    secrets:
      deploy-key:
        description: 'SSH private key for versioning'
        required: true
      npm-auth-token:
        description: 'NPM auth token for publishing'
        required: true
permissions:
  contents: write
  pages: write
  id-token: write
jobs:
  javascript-library:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ${{ fromJson(inputs.node-versions) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.deploy-key }}
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ inputs.pnpm-version }}
          run_install: false
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Get pnpm store directory
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-${{ matrix.node-version }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-pnpm-store-
      - name: Install dependencies
        run: pnpm i --frozen-lockfile --prefer-offline
      - name: Increment alpha version
        if: matrix.node-version == inputs.publish-node-version && github.ref == 'refs/heads/develop'
        run: echo VERSION="$(cd ${{ inputs.version-dir }} && pnpm version prerelease --preid alpha --no-git-tag-version)" >> $GITHUB_ENV
      - name: Increment release version
        if: matrix.node-version == inputs.publish-node-version && github.ref == 'refs/heads/main'
        run: echo VERSION="$(cd ${{ inputs.version-dir }} && pnpm version patch --no-git-tag-version)" >> $GITHUB_ENV
      - run: pnpm build
      - run: pnpm test
      - name: Setup git config
        if: matrix.node-version == inputs.publish-node-version
        run: |
          git config user.email "${{ inputs.github-email }}"
          git config user.name "${{ inputs.github-name }}"
      - name: Commit and push version bump
        if: matrix.node-version == inputs.publish-node-version
        run: |
          git commit -a -m "$VERSION" -m "GitHub Run Number ${{ github.run_number }}" -m "[skip ci]"
          git push
      - name: Create tag ${{ env.VERSION }}
        if: matrix.node-version == inputs.publish-node-version && github.ref == 'refs/heads/main'
        run: |
          git tag -a "$VERSION" -m "$VERSION"
          git push origin "$VERSION"
      - name: Publish canary ${{ env.VERSION }} to registry
        if: matrix.node-version == inputs.publish-node-version && github.ref == 'refs/heads/develop'
        run: |
          pnpm config set "$(npm config get registry | sed -e 's/https://g'):_authToken" "${{ secrets.npm-auth-token }}"
          cd ${{ inputs.publish-dir }}
          pnpm publish --publish-branch ${GITHUB_REF#refs/heads/} --tag canary
          cd ${{ github.workspace }}
      - name: Publish release ${{ env.VERSION }} to registry
        if: matrix.node-version == inputs.publish-node-version && github.ref == 'refs/heads/main'
        run: |
          pnpm config set "$(npm config get registry | sed -e 's/https://g'):_authToken" "${{ secrets.npm-auth-token }}"
          cd ${{ inputs.publish-dir }}
          pnpm publish --publish-branch ${GITHUB_REF#refs/heads/}
          cd ${{ github.workspace }}
      - name: Set up site env
        run: echo "SITE_BRANCH_REF=refs/heads/${{ inputs.site-branch }}" >> $GITHUB_ENV
      - name: Build Site
        if: matrix.node-version == inputs.publish-node-version && github.ref == env.SITE_BRANCH_REF
        run: pnpm run site
      - name: Setup GitHub Pages
        if: matrix.node-version == inputs.publish-node-version && github.ref == env.SITE_BRANCH_REF
        uses: actions/configure-pages@v4
      - name: Upload Site
        if: matrix.node-version == inputs.publish-node-version && github.ref == env.SITE_BRANCH_REF
        uses: actions/upload-pages-artifact@v2
        with:
          path: 'site/'
      - name: Deploy to GitHub Pages
        if: matrix.node-version == inputs.publish-node-version && github.ref == env.SITE_BRANCH_REF
        id: deployment
        uses: actions/deploy-pages@v2

